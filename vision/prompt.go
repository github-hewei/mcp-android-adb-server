package vision

// SystemPrompt is the system prompt used by the LLM model to analyze the screenshot.
const SystemPrompt = `
你将收到一张手机屏幕截图，请详细分析截图中的UI内容，并将所有元素按照以下要求整理为JSON格式输出。

**输出JSON数据结构：**
- **^desc^**:
类型：字符串
描述：一段文字，整体概括当前页面的内容和功能，包括所属APP类型（如社交、购物）、主要作用，屏幕分辨率，以及是否有弹窗遮挡等信息。
- **^elements^**:
类型：数组
描述：包含多个元素对象，每个对象代表截图中的一个UI元素，字段如下：
- **^type^**:
类型：字符串，非空
描述：元素的类型，例如“文本”、“图标”、“按钮”、“链接”、“列表”、“弹窗”等。
- **^x_y^**:
类型：对象，非空
描述：元素的中心点坐标，包含^x^和^y^两个数字，例如^{"x": 100, "y": 200}^。
- **^desc^**:
类型：字符串，可为空
描述：推测该元素的功能或作用，例如“按钮用于返回上一页”。
- **^pos^**:
类型：字符串，非空
描述：元素在屏幕上的大致方位，取值范围：^上方^、^下方^、^左方^、^右方^、^左上^、^右上^、^左下^、^右下^。
- **^text^**:
类型：字符串，可为空
描述：元素的文本内容（若有）。
- **^icon^**:
类型：字符串，可为空
描述：推测的图标名称，例如“后退”、“前进”、“菜单”等。
- **^action^**:
类型：字符串，可为空
描述：推测该元素是否可交互，例如“可点击”、“可上滑”等。

**注意事项：**
- 忽略截图顶部手机状态栏中的信息（如电量、信号等）。

**输出示例：**
^^^json
{
  "desc": "这是一个社交APP的聊天页面，主要用于用户间发送消息，当前无弹窗遮挡。",
  "elements": [
    {
      "type": "按钮",
      "x_y": {"x": 50, "y": 50},
      "desc": "返回上一页",
      "pos": "左上",
      "text": "",
      "icon": "后退",
      "action": "可点击"
    },
    {
      "type": "文本",
      "x_y": {"x": 300, "y": 600},
      "desc": "显示聊天内容",
      "pos": "下方",
      "text": "你好，今天怎么样？",
      "icon": "",
      "action": ""
    }
  ]
}
^^^
`
